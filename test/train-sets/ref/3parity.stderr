final_regressor = models/0021.model
Num weight bits = 16
learning rate = 10
initial_t = 1
power_t = 0.5
decay_learning_rate = 1
randomly initializing neural network output weights and hidden bias
creating cache_file = train-sets/3parity.cache
Reading from train-sets/3parity
num sources = 1
average    since         example     example  current  current  current
loss       last          counter      weight    label  predict features
1.435731   1.435731            3         3.0   1.0000  -1.0000        4
1.965783   2.495835            6         6.0   1.0000   0.8038        4
2.377791   2.872201           11        11.0   1.0000  -1.0000        4
2.396167   2.414543           22        22.0   1.0000   0.7269        4
2.680467   2.964766           44        44.0  -1.0000   0.9079        4
2.787989   2.898011           87        87.0  -1.0000   1.0000        4
2.829911   2.871834          174       174.0   1.0000   0.8361        4
2.747724   2.665537          348       348.0  -1.0000  -0.0315        4
2.313696   1.879668          696       696.0   1.0000  -0.7948        4
2.025376   1.737057         1392      1392.0   1.0000  -0.6061        4
1.455779   0.886182         2784      2784.0   1.0000   0.8212        4
1.040014   0.624248         5568      5568.0   1.0000   1.0000        4
0.520054   0.000000        11135     11135.0  -1.0000  -1.0000        4

finished run
number of examples = 16000
weighted example sum = 1.6e+04
weighted label sum = 0
average loss = 0.3619
best constant = -6.25e-05
total feature number = 64000
