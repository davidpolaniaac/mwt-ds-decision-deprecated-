final_regressor = models/0021.model
Num weight bits = 16
learning rate = 10
initial_t = 1
power_t = 0.5
decay_learning_rate = 1
randomly initializing neural network output weights and hidden bias
creating cache_file = train-sets/3parity.cache
Reading from train-sets/3parity
num sources = 1
average    since         example     example  current  current  current
loss       last          counter      weight    label  predict features
1.601836   1.601836            3         3.0   1.0000  -1.0000        4
2.076741   2.551645            6         6.0   1.0000   0.9400        4
2.105757   2.140577           11        11.0   1.0000  -1.0000        4
1.917905   1.730052           22        22.0   1.0000   0.4547        4
2.227618   2.537331           44        44.0  -1.0000   0.9938        4
2.233664   2.239851           87        87.0  -1.0000   1.0000        4
2.204495   2.175325          174       174.0   1.0000   0.8490        4
2.180869   2.157243          348       348.0  -1.0000   0.2224        4
1.614195   1.047521          696       696.0   1.0000   0.9776        4
1.308042   1.001889         1392      1392.0   1.0000   1.0000        4
1.048945   0.789848         2784      2784.0   1.0000   1.0000        4
0.825313   0.601681         5568      5568.0   1.0000   1.0000        4
0.416933   0.008480        11135     11135.0  -1.0000  -1.0000        4

finished run
number of examples = 16000
weighted example sum = 1.6e+04
weighted label sum = 0
average loss = 0.2902
best constant = -6.25e-05
total feature number = 64000
