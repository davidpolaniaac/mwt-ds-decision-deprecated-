# basic flags
FLAGS = -Wall $(ARCH) -O3 -ffast-math -D_FILE_OFFSET_BITS=64 -Wno-deprecated

# can be altered by platform
LIBS = -lpthread

# flags from original makefile
ARCH = -msse2 -mfpmath=sse 

# dependencies outside of the rules
VW_DEPS = parse_example.o parse_regressor.o parse_args.o
PARSE_ARGS_DEPS = parse_regressor.o parse_example.o io.o
PARSE_EXAMPLE_DEPS = io.o stack.h

# vw specific flags will be set by platform
VW_FLAGS = $(FLAGS)

# A nod towards trying to build for both Linux and Mac OS X
UNAME	:= $(shell uname)
ifeq ($(UNAME), Linux)
	FLAGS += -I/usr/local/include/boost-1_37 -L/usr/local/lib
	LIBS += -lboost_program_options-gcc41-mt
	VW_FLAGS += -Wl,-rpath=/usr/local/lib
endif
ifeq ($(UNAME), Darwin)
	FLAGS += -I/opt/local/include -I/usr/include \
	-L/opt/local/lib -L/usr/lib -L.
	VW_DEPS += getline.o
	PARSE_ARGS_DEPS += platform.h
	PARSE_EXAMPLE_DEPS += getline.o platform.h
	LIBS += -lboost_program_options-mt 
endif

all:	vw

vw.o:	vw.cc $(VW_DEPS)
	g++ $(FLAGS) -c $< -o $@

parse_args.o:	$(PARSE_ARGS_DEPS)

parse_example.o:	$(PARSE_EXAMPLE_DEPS)

io.o:	stack.h

%.o:	%.cc %.h
	g++ $(FLAGS) -c $< -o $@

%.o:	%.c %.h
	g++ $(FLAGS) -c $< -o $@

vw: hash.o io.o vw.o $(VW_DEPS)
	g++ $(VW_FLAGS) -o vw $+ $(LIBS)

test: vw vw-train vw-test
	@echo $(UNAME)

vw-train: vw
	@echo "TEST: vw training ..."
	@cat test/train.dat | ./vw -b 24 -l 1280000 --initial_t 128000 \
	--power_t 1 -f test/t_r_temp

vw-test: vw-train
	@echo
	@echo "TEST: vw test only ..."
	@cat test/test.dat | ./vw -t -i test/t_r_temp -p test/t_p_out

install:
	mkdir -p ~/bin
	cp vw ~/bin

uninstall:
	rm -f ~/bin/vw

clean:
	rm -f *.o bin/vw *~ test/t_* vw
