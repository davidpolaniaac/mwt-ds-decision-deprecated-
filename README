This is an patched experimental version of John Langfords  vowpal wabbit  described below.
Comments on the changes to this patch can be sent to nick.nussbaum@fticonsulting.com


This version adds the features needed to do multipass training when calling from the library interface.


The specific code changes 

Patch: Add multi pass handling to Library function.


Added a test to the cs_test/program  that trains with --passes 8 and a cache and then tests using the library.
Added a .bat file to test that invokes the windows vw build .exe on the data for test 1.
This produces the same result as the above library test was added

Changed to use a new boolean global vw.do_reset_source rather than mucking with stdin_off and adjusting pass_length.


changed parse_atomic_example to have an optional do_read argument that defaults to true
if false it will not read the example, but will cache it and generate ngrams
 (This seems to be  missing from the library interface)

call parse_atomic_example before setup_example 
from VW ::read_example VW:import_example VW:import_example(features) 

on VWdll.cpp VW_Finish   adjust some values to reflect parsed examples count and then do the
start_parser,driver, end_parser loop to process passes 2-n  from cache


change main_parse_loop to set example to parsed_examples count, (which will be 0 in non-library usage)
and also skip the all_passes_complete == all->nnumbpasses for library call. 
I don't understand what this is for, but it doubles  the number of passes.
This uses all.stdin_off as a proxy for called by library here. If this can't be avoided, perhaps stdin_off should 
change name to "library" call.

add a helper function adjust_used_index to set used_index to parsed_examples.
This raises the question of how well this works with unix multi thread library calls.

added a start_parser optional argument that by default calls init_structures. This will be skipped in the library call.


This patch works by calling the parser loop after all the examples generated by the library are made.
This may not work for some current functionality such as merging caches which are sequenced to happen prior to training.
The fix to this would be to add a mock reader that is a co-routine with the library example generation functions.
There would be an option to execute the library in the right place in the initialize command line and all regular non library command line functions
would be done.







-----------------------------------------------------------------------------------------------------------------------------











/*
Copyright (c) by respective owners including Yahoo!, Microsoft, and
individual contributors. All rights reserved.  Released under a BSD (revised)
license as described in the file LICENSE.
 */

This is the vowpal wabbit fast online learning code.  For Windows, look at README.windows.txt

You can download the latest version from here:

https://github.com/JohnLangford/vowpal_wabbit/wiki/Download

Alternatively, the very latest version is available here:

git clone git://github.com/JohnLangford/vowpal_wabbit.git

You should be able to build it on most systems with:
make
(make test)

If that fails, try:
./autogen.sh
./configure
make
(make test)
make install

Note that ./autogen.sh requires automake.  On OSX, this implies installing 'glibtools'

Be sure to read the wiki: https://github.com/JohnLangford/vowpal_wabbit/wiki
for the tutorial, command line options, etc.  

The 'cluster' directory has it's own documentation for cluster
parallel use, and the examples at the end of test/Runtests give some
example flags.
